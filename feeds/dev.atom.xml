<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Code Monkey's Blog</title><link href="/" rel="alternate"></link><link href="/feeds/dev.atom.xml" rel="self"></link><id>/</id><updated>2011-01-11T17:14:52-05:00</updated><entry><title>Two source code line counters you should have</title><link href="/two-source-code-line-counters-you-should-have.html" rel="alternate"></link><updated>2011-01-11T17:14:52-05:00</updated><author><name>jchain</name></author><id>tag:,2011-01-11:two-source-code-line-counters-you-should-have.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://sunset.usc.edu/research/CODECOUNT/"&gt;UCC&lt;/a&gt;(Unified Code Count) is developed by the researchers at &lt;a href="http://www.usc.edu"&gt;USC&lt;/a&gt; in C++. It is cross-platform and supports a bunch of languages. The most impressive feature to me is that it can do code complexity analysis, which is very rare for a open-source code counter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://cloc.sourceforge.net/"&gt;CLOC&lt;/a&gt;(Count Lines of Code ) is written in Perl. Lightweight, easy to use.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So I would recommend every programmers to have both in their arsenal.&lt;/p&gt;</summary><category term="Tools"></category></entry></feed>