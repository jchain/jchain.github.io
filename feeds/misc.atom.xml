<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Code Monkey's Blog</title><link href="/" rel="alternate"></link><link href="/feeds/misc.atom.xml" rel="self"></link><id>/</id><updated>2011-01-16T07:46:51-05:00</updated><entry><title>The Find Command that I Should Keep in Mind</title><link href="/the-find-command-that-i-should-keep-in-mind.html" rel="alternate"></link><updated>2011-01-16T07:46:51-05:00</updated><author><name>jchain</name></author><id>tag:,2011-01-16:the-find-command-that-i-should-keep-in-mind.html</id><summary type="html">&lt;p&gt;find . -regex '.&lt;em&gt;/[0-9]&lt;/em&gt;.gif -exec ./filter.pl -i {} \;&lt;/p&gt;</summary><category term="Linux"></category><category term="tips"></category></entry><entry><title>const-overloading in C++</title><link href="/const-overloading-in-c.html" rel="alternate"></link><updated>2010-04-25T05:35:39-04:00</updated><author><name>jchain</name></author><id>tag:,2010-04-25:const-overloading-in-c.html</id><summary type="html">&lt;p&gt;See more at &lt;a href="http://www.parashift.com/c++-faq-lite/const-correctness.html"&gt;http://www.parashift.com/c++-faq-lite/const-correctness.html&lt;/a&gt;&lt;/p&gt;</summary><category term="C++"></category></entry><entry><title>Do you want to debug a program with command line parameters in Visual C++ 2008?</title><link href="/do-you-want-to-debug-a-program-with-command-line-parameters-in-visual-c-2008.html" rel="alternate"></link><updated>2010-04-24T05:33:50-04:00</updated><author><name>jchain</name></author><id>tag:,2010-04-24:do-you-want-to-debug-a-program-with-command-line-parameters-in-visual-c-2008.html</id><summary type="html">&lt;p&gt;Set them in project-&amp;gt;configuration properties-&amp;gt;Debugging. But there is one more thing to do: Set your project as the Startup Project in the Solution Explorer! If you don't do that, the command line parameters won't be passed in whatever you try!&lt;/p&gt;</summary><category term="C++"></category><category term="Visual C++"></category></entry><entry><title>[CMake] Cannot determine link language for target?</title><link href="/cmake-cannot-determine-link-language-for-target.html" rel="alternate"></link><updated>2010-03-24T05:37:24-04:00</updated><author><name>jchain</name></author><id>tag:,2010-03-24:cmake-cannot-determine-link-language-for-target.html</id><summary type="html">&lt;p&gt;For whatever reason add&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SET_TARGET_PROPERTIES(XYZ PROPERTIES LINKER_LANGUAGE C)
&lt;/pre&gt;&lt;/div&gt;</summary><category term="C/C++"></category><category term="CMake"></category></entry><entry><title>Multithreading - The Delphi Way</title><link href="/multithreading-the-delphi-way.html" rel="alternate"></link><updated>2006-12-13T04:45:08-05:00</updated><author><name>jchain</name></author><id>tag:,2006-12-13:multithreading-the-delphi-way.html</id><summary type="html">&lt;p&gt;This is an excellent tutorial on Delphi multi threading programming, see &lt;a href="http://www.eonclash.com/Tutorials/Multithreading/MartinHarvey1.1/ToC.html"&gt;http://www.eonclash.com/Tutorials/Multithreading/MartinHarvey1.1/ToC.html &lt;/a&gt;&lt;/p&gt;</summary><category term="Delphi"></category><category term="Programming"></category><category term="Windows"></category></entry><entry><title>Notes on Installation of Turbo C++ Explorer</title><link href="/notes-on-installation-of-turbo-c-explorer.html" rel="alternate"></link><updated>2006-12-07T04:48:47-05:00</updated><author><name>jchain</name></author><id>tag:,2006-12-07:notes-on-installation-of-turbo-c-explorer.html</id><summary type="html">&lt;p&gt;When starting Turbo C++ Explorer, you may get an error message stating:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;acces violation at adress 51F515BE rtl100.bpl....&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;error with coreide100.bpl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;designeide100.bpl&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The workaround is running "regasm" from .NET v1.1 to register the missing  .NET assemblies used by
Turbo C++ Explorer IDE. Go to the C:\Program Files\Borland\BDS\4.0\Bin directory  and run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;regasm Borland.Studio.Toolsets.dll
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you should start the IDE successfully. If you still see an error message box, saying that a
ClassId is missing or similar errors, you can solve this by registering all possible assemblies
manually.&lt;/p&gt;
&lt;p&gt;To do this, navigate to the BDS \Bin directory in the command line and type "dir
Borland.Studio.*.tlb" to list all relevant .tlb files. Then, run "regasm" on the corresponding .dll
file for each.(see
&lt;a href="http://support.borland.com/entry.jspa?externalID=4102&amp;amp;categoryID=39"&gt;http://support.borland.com/entry.jspa?externalID=4102&amp;amp;categoryID=39&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;OK, then you start a new project from the menu File-&amp;gt;New..., if you are unlucky to get an exception
Class not registered, ClassID {17CD2E5A-9D11-4BB4-8030-1092F6645714}, here is a way to fix it:&lt;/p&gt;
&lt;p&gt;Save the &lt;a href="http://zhangcheng.johnchain.googlepages.com/fix_turbo_cpp.reg"&gt;fix_turbo_cpp.reg&lt;/a&gt; file
into your hard disk, and double click it to import itself into the Registry.(thanks Tim Lichtenberg,
see&lt;strong&gt;
&lt;/strong&gt;&lt;a href="http://qc.borland.com/wc/qcmain.aspx?d=25744"&gt;http://qc.borland.com/wc/qcmain.aspx?d=25744&lt;/a&gt;)&lt;/p&gt;</summary><category term="Delphi"></category></entry><entry><title>Delphi2006 editor shortcuts</title><link href="/delphi2006-editor-shortcuts.html" rel="alternate"></link><updated>2006-09-05T04:52:24-04:00</updated><author><name>jchain</name></author><id>tag:,2006-09-05:delphi2006-editor-shortcuts.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;CTRL+J&lt;/strong&gt; : Invoke code templates&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+T&lt;/strong&gt; : Delete current word&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+E&lt;/strong&gt; : Incremental search&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+Y&lt;/strong&gt; : Delete current line&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+G&lt;/strong&gt; : Insert a new GUID at the cursor position&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+I&lt;/strong&gt; : Indent the current selected block&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+U&lt;/strong&gt; : outdent the current selected block&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+Y&lt;/strong&gt; : delete to the end of line&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+J&lt;/strong&gt; : Invoke syncedit&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALT+[&lt;/strong&gt; : match pair forward&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALT+]&lt;/strong&gt; : match pair backward&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALT+RightArrow&lt;/strong&gt; : browse forward (hotlink history)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALT+LeftArrow&lt;/strong&gt; : browse backward (hotlink history)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALT+UpArrow&lt;/strong&gt; : browse to symbol under editor cursor (invoke a hotlink and add it to the hotlink history)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F4&lt;/strong&gt; : Run program to current cursor position&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F5&lt;/strong&gt; : Toggle breakpoint&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F7&lt;/strong&gt; : Debugger step into&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F8&lt;/strong&gt; : Debugger step over&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F9&lt;/strong&gt; : Run program under debugger&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+F12&lt;/strong&gt; : View units&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALT+G&lt;/strong&gt; : Goto line number in editor&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+R&lt;/strong&gt; : Start/Stop recording editor macro&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+P&lt;/strong&gt; : Play editor macro&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SPACE&lt;/strong&gt; : Invoke code completion&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+SPACE&lt;/strong&gt; : Invoke code parameter hints&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+ENTER&lt;/strong&gt; : Open file at cursor&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+C&lt;/strong&gt; : Invoke class completion for the class that currently contains the cursor&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+UpArrow&lt;/strong&gt; : Navigate to method implementation/declaration&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+SHIFT+DownArrow&lt;/strong&gt; : Navigate to method implementation/declaration&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+ALT+UpArrow&lt;/strong&gt; : Navigate to previous method implementation in lexical order&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+ALT+DownArrow&lt;/strong&gt; : Navigate to next method implementation in lexical order  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+ALT+Home&lt;/strong&gt; : Navigate to the lexically first method implementation in this source unit  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+ALT+End&lt;/strong&gt; : Navigate to the lexically last method implementation in this source unit  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTRL+/&lt;/strong&gt; : Toggle comment per line or selected block  &lt;/p&gt;</summary><category term="Delphi"></category></entry></feed>