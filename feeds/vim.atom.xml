<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Code Monkey's Blog</title><link href="/" rel="alternate"></link><link href="/feeds/vim.atom.xml" rel="self"></link><id>/</id><updated>2013-07-17T16:41:20-04:00</updated><entry><title>Fly with vim airline</title><link href="/fly-with-vim-airline.html" rel="alternate"></link><updated>2013-07-17T16:41:20-04:00</updated><author><name>jchain</name></author><id>tag:,2013-07-17:fly-with-vim-airline.html</id><summary type="html">&lt;p&gt;I recently replaced my &lt;a href="https://github.com/Lokaltog/vim-powerline"&gt;vim-powerline&lt;/a&gt; with &lt;a href="https://github.com/bling/vim-airline"&gt;vim-airline&lt;/a&gt;. I like vim-airline so much that
I can't help spreading words about it.&lt;/p&gt;
&lt;p&gt;For those who don't know what vim-powerline is. It is a Vim plugin that can make the statusline of
Vim colorful and eye candy. When vim-powerline first came out, it caught on very quickly. The author
of vim-powerline even re-wrote it in Python (the project &lt;a href="https://github.com/Lokaltog/powerline"&gt;powerline&lt;/a&gt;) to make it work for more
applications (zsh, Tmux, ipython to name a few). But the current problems are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;vim-powerline is deprecated. No feature is added. To support other plugins, extra work needs to
   be done (see &lt;a href="https://github.com/zhaocai/linepower.vim)"&gt;linepower&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;powerline is too heavy for Vim users who believe &lt;em&gt;less is more&lt;/em&gt;. Its dependency in Python
   complicated the installation and uninstallation. I've never set it up successfully. Most
   importantly, it is unstable. Many issues are open.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I really appreciate the hard work done by the author of vim-powerline. If vim-airline didn't appear,
I would continue to use this plugin.&lt;/p&gt;
&lt;p&gt;Comparing with the former two, vim-airline is lightweight, vimscript-only and actively maintained.
It supports many plugins and the number is increasing. I did a very rough statistics on lines of
code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim-airline:   935 lines
vim-powerline: 2638 lines
powerline:     11067 lines
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is impressive that vim-airline uses less than half the code of vim-powerline and all the features
are covered. Here is my settings in &lt;code&gt;.vimrc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; airline
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
let g:airline_theme             = &amp;#39;powerlineish&amp;#39;
let g:airline_enable_branch     = 1
let g:airline_enable_syntastic  = 1

&amp;quot; vim-powerline symbols
let g:airline_left_sep          = &amp;#39;⮀&amp;#39;
let g:airline_left_alt_sep      = &amp;#39;⮁&amp;#39;
let g:airline_right_sep         = &amp;#39;⮂&amp;#39;
let g:airline_right_alt_sep     = &amp;#39;⮃&amp;#39;
let g:airline_branch_prefix     = &amp;#39;⭠&amp;#39;
let g:airline_readonly_symbol   = &amp;#39;⭤&amp;#39;
let g:airline_linecolumn_prefix = &amp;#39;⭡&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To view the unicode glyphs correctly, please use the font patched by &lt;code&gt;fontpatcher&lt;/code&gt; in the github
repo of &lt;a href="https://github.com/Lokaltog/vim-powerline"&gt;vim-powerline&lt;/a&gt; (NOT POWERLINE).&lt;/p&gt;
&lt;p&gt;Another tip. If you start Vim but the statusline is blank like this &lt;img alt="alt" src="https://dl.dropboxusercontent.com/u/309872/blog/vim_lazyredraw_on.png" /&gt;
You may check in your .vimrc if you&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set lazyredraw
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comment it. You will see &lt;img alt="alt" src="https://dl.dropboxusercontent.com/u/309872/blog/vim_lazyredraw_off.png" /&gt;&lt;/p&gt;
&lt;p&gt;I strongly recommend this great plugin.&lt;/p&gt;</summary><category term="Vim"></category></entry><entry><title>Vim gets slow when editing LaTeX file</title><link href="/vim-gets-slow-when-editing-latex-file.html" rel="alternate"></link><updated>2012-12-26T04:10:00-05:00</updated><author><name>jchain</name></author><id>tag:,2012-12-26:vim-gets-slow-when-editing-latex-file.html</id><summary type="html">&lt;p&gt;Recently I have been working on editing multiple LaTeX files containing many lines and equations.
I noticed there was an annoying slowdown when I moved the cursor around. CPU usage jumped to 100% so
frequently that I almost lost patience to focus on the writing itself. &lt;/p&gt;
&lt;p&gt;After tweaking the Vim plugins and configurations for a while, I found out &lt;code&gt;set cursorline&lt;/code&gt; and the
built-in plugin &lt;code&gt;MatchParen&lt;/code&gt; made Vim scrolling very slow. Some people seemed to have run into the
same problem as mentioned &lt;a href="http://haerench.blogspot.com/2012/12/cursorline-cursorcolumn-and-syntax.html"&gt;here&lt;/a&gt; and &lt;a href="https://bbs.archlinux.org/viewtopic.php?id=111647"&gt;here&lt;/a&gt;. Some complained that Vim got slow when editing
Ruby file. And I use Vim in terminal.&lt;/p&gt;
&lt;p&gt;I have no idea why Vim drawing is so CPU expensive. At this moment I disabled the highlighting of
&lt;code&gt;cursorline&lt;/code&gt; and &lt;code&gt;cursorcolumn&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set nocursorline
set nocursorcolumn
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also notice that cursor movements in the equation environment was very slow partially it was
because the math equations had so many parentheses, brackets and braces. Matching pairs and syntax
highlighting easily ate a good amount of CPU cycles. So I turned off this plugin by  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:NoMatchParen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I didn't completely disable this plugin since I found that it was useful when editing long
equations. So I didn't try this in &lt;code&gt;.vimrc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;let g:loaded_matchparen=1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I found some other tweaks by using Vim's &lt;code&gt;:profile&lt;/code&gt; command and the verbose options &lt;code&gt;vim -V
foo.bar&lt;/code&gt;. They are good ways to try to analyze the slowdown.&lt;/p&gt;
&lt;p&gt;The lesson I learned:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;All-around syntax highlighting seems a little bit expensive in Vim. Emacs seems to beat Vim on
   this point. &lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;autocmd FileType&lt;/code&gt; to further tweak the performance, such as disable the
   unnecessary plugins.&lt;/li&gt;
&lt;/ol&gt;</summary></entry><entry><title>Indent only XML file</title><link href="/indent-only-xml-file.html" rel="alternate"></link><updated>2011-12-15T16:48:24-05:00</updated><author><name>jchain</name></author><id>tag:,2011-12-15:indent-only-xml-file.html</id><summary type="html">&lt;p&gt;Recently I have worked on editing XML files in Vim. These XML files are the documents of a software in DocBook style. Since they are maintained manually, the indentation is badly formatted. So before getting deeper, the very first thing to do was to re-indent the files. It turned out from a short Google search that the tools to get the job done could be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ku1ik.com/2011/09/08/formatting-xml-in-vim-with-indent-command.html"&gt;xmllint&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://xmlindent.sourceforge.net/"&gt;xmlindent&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.kitebird.com/software/xmlformat/xmlformat.html"&gt;xmlformat&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.qualitybrain.com/?p=37"&gt;tidy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xmllint, xmlindent and tidy seem to remove the empty lines I left intentionally, which is bad since I want to keep them for readability. xmlformat seems to provide such options to add blank lines but I didn't have time to look into. So finally I only used 'gg=G' in Vim to format the XML file. This operation was only to indent the file without combining or removing any blank lines. That was just what I needed. &lt;/p&gt;</summary><category term="Vim"></category><category term="XML"></category></entry><entry><title>Search and replace in a visual selection</title><link href="/search-and-replace-in-a-visual-selection.html" rel="alternate"></link><updated>2011-02-01T07:47:14-05:00</updated><author><name>jchain</name></author><id>tag:,2011-02-01:search-and-replace-in-a-visual-selection.html</id><summary type="html">&lt;p&gt;:%s/\%Vold/NEW/g&lt;/p&gt;</summary><category term="tips"></category><category term="Vim"></category></entry><entry><title>Start Vim without loading vimrc</title><link href="/start-vim-without-loading-vimrc.html" rel="alternate"></link><updated>2011-01-22T03:25:21-05:00</updated><author><name>jchain</name></author><id>tag:,2011-01-22:start-vim-without-loading-vimrc.html</id><summary type="html">&lt;p&gt;You can also start it without reading any of the initialization files
(.vimrc, /etc/vim/vimrc) like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim -u NONE file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Credit due to &lt;a href="http://fossplanet.com/f10/open-vim-syntax-off-92829/"&gt;Smoot Carl-Mitchell&lt;/a&gt;&lt;/p&gt;</summary><category term="tips"></category><category term="Vim"></category></entry></feed>